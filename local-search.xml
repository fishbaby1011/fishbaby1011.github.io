<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>gfw</title>
    <link href="/2024/08/06/gfw/"/>
    <url>/2024/08/06/gfw/</url>
    
    <content type="html"><![CDATA[<h1 id="中國網路『長城』探究與實作"><a href="#中國網路『長城』探究與實作" class="headerlink" title="中國網路『長城』探究與實作"></a>中國網路『長城』探究與實作</h1><h6 id="成淵高級中學"><a href="#成淵高級中學" class="headerlink" title="成淵高級中學"></a>成淵高級中學</h6><h5 id="20436謝瑍宇"><a href="#20436謝瑍宇" class="headerlink" title="20436謝瑍宇"></a>20436謝瑍宇</h5><p>中國網路”長城”，作為中國政府實施的網絡監控和篩選系統，一直以來引起了廣泛的關注。這道看似無形的牆壁，背後隱藏著複雜的技術和政治考量。本報告將簡單解釋網路訪問運作原理，並深入探討中國網路”長城”的背後動機、實際運作方式，最後在實際架設簡單的長城並自行翻越。通過這次報告，我將不僅深入了解中國網路治理的現狀，也瞭解基本網路運作原理及網路安全的重要性。</p><h1 id="探究部分"><a href="#探究部分" class="headerlink" title="探究部分"></a>探究部分</h1><h5 id="若對網路訪問運作有基本了解，可直接到長城簡介開始查看。"><a href="#若對網路訪問運作有基本了解，可直接到長城簡介開始查看。" class="headerlink" title="若對網路訪問運作有基本了解，可直接到長城簡介開始查看。"></a>若對網路訪問運作有基本了解，可直接到<a href="#%E9%95%B7%E5%9F%8E%E7%B0%A1%E4%BB%8B">長城簡介</a>開始查看。</h5><h2 id="網路訪問運作原理簡介"><a href="#網路訪問運作原理簡介" class="headerlink" title="網路訪問運作原理簡介"></a>網路訪問運作原理簡介</h2><p>比如我們現在訪問 google.com，簡單來說就是本地電腦給google的伺服器發請求訪問的數據包，當接受到來自你的電腦的數據包後，google伺服器會將的數據包給送回來，一來一往，就形成上網的流程。</p><h4 id="以下為網路訪問運作原理簡介"><a href="#以下為網路訪問運作原理簡介" class="headerlink" title="以下為網路訪問運作原理簡介:"></a>以下為網路訪問運作原理簡介:</h4><h3 id="用戶發送請求"><a href="#用戶發送請求" class="headerlink" title="用戶發送請求"></a>用戶發送請求</h3><p>當你在瀏覽器中輸入網址或點擊連結時，你的電腦發送一個請求到指定的伺服器，去請求需要的資源，比如網頁、圖片、影片等。</p><pre><code class=" mermaid">graph LR                  本地電腦 --我要訪問---&gt; 伺服器伺服器 ------&gt; 本地電腦</code></pre><h3 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h3><p>世界上有屬不清的伺服器，要如何找到它們呢?這時候就需要IP地址，通俗點講就是門牌號。有了門牌號這樣就可以讓你發送的請求成功送到指定伺服器。</p><h3 id="DNS服務器"><a href="#DNS服務器" class="headerlink" title="DNS服務器"></a>DNS服務器</h3><p>IP通常都是由一串數字(如:142.251.42.238)組成，這顯然不太符合人類的記憶，所以這時候DNS服務器就登場了，DNS服務器通俗講就是一個大型的查號台，可以幫我們把複雜的數字變成人類好記的文字(如:google.com)</p><h3 id="DNS解析"><a href="#DNS解析" class="headerlink" title="DNS解析"></a>DNS解析</h3><p>如果輸入的內容為網址(如:<a href="http://www.gooogle.com)，瀏覽器需要將這串域名解析換為IP地址(如:142.251.42.238)已找到相應的伺服器。">www.gooogle.com)，瀏覽器需要將這串域名解析換為IP地址(如:142.251.42.238)已找到相應的伺服器。</a><br><img src="https://hackmd.io/_uploads/H1IFq-biT.png" alt="螢幕擷取畫面 2024-02-03 182110"><br>:arrow_up: google.com透過DNS解析出IP為142.251.42.238</p><h3 id="建立TCP連結"><a href="#建立TCP連結" class="headerlink" title="建立TCP連結"></a>建立TCP連結</h3><p>一旦確定目標伺服器的IP位置，瀏覽器就會與對方伺服器建立TCP（Transmission Control Protocol）連接</p><p>:::info<br>:bulb: 註:TCP是一種可靠的連接協議，確保數據的可靠傳輸<br>:::</p><h3 id="發送HTTP請求"><a href="#發送HTTP請求" class="headerlink" title="發送HTTP請求"></a>發送HTTP請求</h3><p>通過已經建立的TCP連接，瀏覽器向伺服器發送HTTP請求，請求需要的資源。</p><h3 id="伺服器處理請求並返回數據"><a href="#伺服器處理請求並返回數據" class="headerlink" title="伺服器處理請求並返回數據"></a>伺服器處理請求並返回數據</h3><p>伺服器接收到請求後，根據請求的內容進行處理，並返回相應的數據，通常是HTML、圖片、CSS等網頁內容，並顯示在請求者的瀏覽器上。</p><h3 id="斷開TCP連結"><a href="#斷開TCP連結" class="headerlink" title="斷開TCP連結"></a>斷開TCP連結</h3><p>當請求者與伺服器完成請求後，瀏覽器跟電腦之前的TCP連接被關閉，結束通信。</p><h3 id="TLS的簡介"><a href="#TLS的簡介" class="headerlink" title="TLS的簡介"></a>TLS的簡介</h3><p>最早的上網過埕中，所有的東西都是透明的，包含了帳號密碼等，路由、DNS服務器都可以查看到所有內容，這會衍伸資安問題，這時候就需要『TLS傳輸層安全協議』(Transport Layer Security），TLS傳輸層會將所有數據進行加密，只會看到目標IP地址，判斷是否開啟了TLS加密，當你訪問的網站開頭為https時，對方主機有開啟加密，若開頭為http就沒有，傳輸的內容全部都是明文傳輸，非常不安全。<br><img src="https://hackmd.io/_uploads/Syjcq-Zop.png" alt="螢幕擷取畫面 2024-02-03 212112"><br>:arrow_up: 開頭為https就是有使用TSL進行加密</p><h3 id="SNI的簡介"><a href="#SNI的簡介" class="headerlink" title="SNI的簡介"></a>SNI的簡介</h3><p>上面有提到IP是網路世界中的門牌號，那麼SNI就可以理解成網路世界房間號，在互聯網通信中，IP地址就像是一個地址的門牌號，但當伺服器使用共享的IP地址時，SNI允許伺服器擁有多個域名，這就像是一個地址上可以有多間房間。當發送的數據包到達時，SNI能夠指定將數據包送進特定的房間，這樣伺服器就能正確識別和處理不同的域名，實現在共享IP地址的伺服器上同時提供多個網站的功能。</p><h2 id="網路訪問流程圖"><a href="#網路訪問流程圖" class="headerlink" title="網路訪問流程圖"></a>網路訪問流程圖</h2><pre><code class=" mermaid">graph TD;請求端--&gt;路由器--&gt;是否需要DNS解析--&gt;要--&gt;DNS解析--&gt;請求端是否需要DNS解析--&gt;不要--&gt;對方伺服器</code></pre><h4 id="若需要解析DNS-google-com-會先走左邊，解析完DNS後-142-251-42-238-並回傳至請求端，再走右邊至對方的伺服器"><a href="#若需要解析DNS-google-com-會先走左邊，解析完DNS後-142-251-42-238-並回傳至請求端，再走右邊至對方的伺服器" class="headerlink" title="若需要解析DNS(google.com)會先走左邊，解析完DNS後(142.251.42.238)並回傳至請求端，再走右邊至對方的伺服器"></a>若需要解析DNS(google.com)會先走左邊，解析完DNS後(142.251.42.238)並回傳至請求端，再走右邊至對方的伺服器</h4><p>路徑圖如下:<br>請求端(google.com)-&gt;路由器-&gt;需要DNS解析-&gt;<br>DNS解析-&gt;請求端-&gt;不需要DNS解析-&gt;對方的伺服器<br>(google.com-&gt;142.251.42.238)</p><h2 id="長城簡介"><a href="#長城簡介" class="headerlink" title="長城簡介"></a>長城簡介</h2><h3 id="什麼是中國防火長城-GFW"><a href="#什麼是中國防火長城-GFW" class="headerlink" title="什麼是中國防火長城(GFW)???"></a>什麼是中國防火長城(GFW)???</h3><p>中國網信辦稱其為數據跨境安全網關，是中華人民共和國政府過濾國際網際網路出口內容的軟硬體系統集合，中國防火長城指的是網站內容被防火長城所封鎖或者指伺服器的通訊被封阻，「防火長城」英文「Great Firewall of china」一詞最早是由白傑明和桑曄提出，也可以稱為「牆」、「網路長城」、「防火牆」、「中國國家防火牆」等等…</p><h3 id="歷史"><a href="#歷史" class="headerlink" title="歷史"></a>歷史</h3><p>中國於1994年引入網際網路功能，白傑明和桑曄於1997年發表的文章《The Great Firewall of China》稱這一系統開發開始在1996年，在當年在金橋資訊網和ChinaNet已經有國外新聞網站被封鎖。</p><h2 id="長城主要技術應用"><a href="#長城主要技術應用" class="headerlink" title="長城主要技術應用"></a>長城主要技術應用</h2><p>一開始防火長城僅使用IP封鎖，這無法應對網站時常更換IP的情況。自2002年開始，開始自動執行針對特定域名的DNS劫持，並能夠檢測HTTP連接中的特定關鍵字，使用TCP重設攻擊的方法阻止連接。2010年後，HTTPS（加密的HTTP）開始被廣泛使用，而防火長城在很長一段時間內都沒有處理加密連接。直到2018年8月，對加密連接中「伺服器名稱指示」（SNI）資訊的檢測才出現。</p><h3 id="DNS汙染"><a href="#DNS汙染" class="headerlink" title="DNS汙染"></a>DNS汙染</h3><p>既剛剛解說的<a href="#DNS%E8%A7%A3%E6%9E%90">DNS解析</a>，長城也有在DNS部分動手腳，由於DNS所有數據都是明文顯示，一旦長城偵測到不被允許的域名，長城會趕在外國域名服務器解析出正確的域名前先給你解析出錯誤的域名，讓你無法正確瀏覽請求的網站，但是這種方法無法攔截已經知道確切IP(如:142.251.42.238)的用戶，所以常長城會使用<a href="#IP%E5%9C%B0%E5%9D%80%E5%8F%8A%E7%AB%AF%E5%8F%A3%E5%B0%81%E9%8E%96">IP地址及端口封鎖</a>的方法來攔截知道確切IP的用戶。</p><h3 id="IP地址及端口封鎖"><a href="#IP地址及端口封鎖" class="headerlink" title="IP地址及端口封鎖"></a>IP地址及端口封鎖</h3><p>長城會通過實時監測網絡數據流量，識別和封鎖被認為是敏感的IP地址。這種手段不僅用於封鎖特定網站，甚至可以影響使用者訪問特定服務的能力。還使用端口封鎖技術，通過封鎖特定的網絡通信端口(如:22端口(VPN常用)、443端口(google服務常用)…等)，限制了特定應用程序或服務的訪問。</p><h3 id="關鍵詞阻斷及TCP重置"><a href="#關鍵詞阻斷及TCP重置" class="headerlink" title="關鍵詞阻斷及TCP重置"></a>關鍵詞阻斷及TCP重置</h3><h3 id="協議識別"><a href="#協議識別" class="headerlink" title="協議識別"></a>協議識別</h3><h3 id="大數據及AI的應用"><a href="#大數據及AI的應用" class="headerlink" title="大數據及AI的應用"></a>大數據及AI的應用</h3><h2 id="如何翻越長城"><a href="#如何翻越長城" class="headerlink" title="如何翻越長城"></a>如何翻越長城</h2><h2 id="長城對中國國民的引響"><a href="#長城對中國國民的引響" class="headerlink" title="長城對中國國民的引響"></a>長城對中國國民的引響</h2><h1 id="實作部分"><a href="#實作部分" class="headerlink" title="實作部分"></a>實作部分</h1><p>為了完成這份報告，我將使用 Squid 代理來模擬中國網路「長城」的效果。Squid 是一種 HTTP 代理伺服器軟體，可以作為快取伺服器、過濾流量幫助網路安全，也可以作為代理伺服器鏈中的一環，向上級代理轉發資料或直接連接網際網路。</p><p>在這個實作部分，我將使用 Squid 代理來過濾流量，並且阻擋我所設定的網站。這將讓我能夠親身體驗中國網路「長城」對網際網路使用者的影響。</p><p>具體來說，我將在以下幾個方面進行實作：</p><p>安裝和配置 Squid 代理伺服器<br>設定過濾規則，以阻擋我所設定的網站<br>測試 Squid 代理伺服器，以確保其正常運作<br>我希望透過這個實作，能夠更深入地瞭解中國網路「長城」的運作方式，以及其對網際網路自由的影響。</p><h2 id="Squid軟體介紹"><a href="#Squid軟體介紹" class="headerlink" title="Squid軟體介紹"></a>Squid軟體介紹</h2><p>Squid是一個功能強大的開源代理伺服器軟體，廣泛用於企業、學校和組織的網路環境。它的主要功能包括</p><h2 id="Squid優缺點"><a href="#Squid優缺點" class="headerlink" title="Squid優缺點"></a>Squid優缺點</h2><h2 id="Squid應用"><a href="#Squid應用" class="headerlink" title="Squid應用"></a>Squid應用</h2><h1 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/08/06/hello-world/"/>
    <url>/2024/08/06/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
